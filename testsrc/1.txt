; Filename = ../testsrc/1.c
declare void @llvm.memset.p0.i32(i32*, i8, i32, i1)
@gb = constant [2 x [3 x i32]] [[3 x i32] zeroinitializer, [3 x i32] [i32 5, i32 6, i32 zeroinitializer]]
@ga = global [2 x [3 x i32]] [[3 x i32] [i32 1, i32 2, i32 3], [3 x i32] [i32 4, i32 5, i32 6]]
declare i32 @getint()
declare float @getfloat()
declare i32 @getch()
declare i32 @getarray(i32*)
declare i32 @getfarray(float*)
declare void @putint(i32)
declare void @putfloat(float)
declare void @putch(i32)
declare void @putarray(i32, i32*)
declare void @putfarray(i32, float*)
declare void @_sysy_starttime(i32)
declare void @_sysy_stoptime(i32)
define i32 @add(i32 %arg_0, i32 %arg_1) {
LEntry:
    %0 = alloca i32
    store i32 %arg_0, i32* %0
    %1 = alloca i32
    store i32 %arg_1, i32* %1
    %2 = load i32, i32* %0
    %3 = load i32, i32* %1
    %4 = add i32 %2, %3
    ret i32 %4
}

define i32 @access(i32* %arg_0, i32 %arg_1) {
LEntry:
    %0 = alloca i32*
    store i32* %arg_0, i32** %0
    %1 = alloca i32
    store i32 %arg_1, i32* %1
    %2 = load i32, i32* %1
    %3 = load i32*, i32** %0
    %4 = getelementptr i32, i32* %3, i32 %2
    %5 = load i32, i32* %4
    ret i32 %5
}

define i32 @main() {
LEntry:
    %0 = alloca i32
    store i32 2, i32* %0
    %1 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* @ga, i32 0, i32 1
    %2 = getelementptr [3 x i32], [3 x i32]* %1, i32 0, i32 0
    %3 = load i32, i32* %0
    %4 = call i32 @access(i32* %2, i32 %3)
    ret i32 %4
}

